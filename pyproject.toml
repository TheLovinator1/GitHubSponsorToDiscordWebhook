[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

[tool.poetry]
name = "github-sponsor-discord-notifier"
version = "0.1.0"
description = "Send a webhook to Discord when someone sponsors you."
authors = ["Joakim Hells√©n <tlovinator@gmail.com>"]
readme = "README.md"
license = "GPL-3.0-or-later"
homepage = "https://github.com/TheLovinator1/github-sponsor-discord-notifier"
repository = "https://github.com/TheLovinator1/github-sponsor-discord-notifier"
keywords = [
  "bot",
  "discord",
  "github-sponsor-discord-notifier",
  "github",
  "sponsors",
  "github-sponsors",
]
package-mode = false

[tool.poetry.dependencies]
python = "^3.11"
discord-webhook = "*"
fastapi = "*"
httpx = "*"
pre-commit = "*"
pytest = "*"
pytest-asyncio = "*"
python-dotenv = "*"
uvicorn = { extras = ["standard"], version = "*" }

[tool.ruff]
target-version = "py312"
fix = true
unsafe-fixes = true
preview = true
line-length = 120
lint.select = ["ALL"]
lint.pydocstyle.convention = "google"
lint.isort.required-imports = ["from __future__ import annotations"]
lint.ignore = [
  "COM812",
  "CPY001",
  "D100",
  "D104",
  "ERA001",
  "FIX002",
  "G004",
  "ISC001",
  "S320",
  "TD002",
]

[tool.ruff.lint.per-file-ignores]
"**/tests/*.py" = [
  "ARG",     # Unused function args -> fixtures nevertheless are functionally relevant...
  "FBT",     # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
  "PLR2004", # Magic value used in comparison, ...
  "S101",    # asserts allowed in tests...
  "S311",    # Standard pseudo-random generators are not suitable for cryptographic purposes
  "PT001",   # Checks for argument-free @pytest.fixture() decorators
]
